))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
data@variables[[target]] %>% map(colnames)
data@variables[[target]] %>% map(colnames) %>% map(paste)
data@variables[[target]] %>% map(colnames) %>% map(paste, collapse = " ")
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
bw@variables
bw@variables$PKANNOT
NULL %>% paste(collapse = "j")
data <- fw
target <- "annotation"
temp_col <- data@variables[[target]] %>% map(~.x %>% unite("col", sep=params$sep)) %>% map(~ pull(.x, "col"))
params <- list(sep=" ")
temp_col <- data@variables[[target]] %>% map(~.x %>% unite("col", sep=params$sep)) %>% map(~ pull(.x, "col"))
temp_col
headers <- data@variables[[target]] %>% map(colnames) %>% map_chr(paste, collapse = params$sep)
headers
headers <- data@variables[[target]] %>% map(colnames)
headers
headers <- data@variables[[target]] %>% map(colnames) %>% map(paste, collapse = params$sep)
temp_col <- map2(temp_col, headers, ~c(.y, .x))
temp_col
headers <- data@variables[[target]] %>% map(colnames) %>% map(paste, collapse = params$sep)
headers
data@variables[[target]] %>% map(colnames)
data@variables[[target]]
tibble(NULL=c())
tibble(`NULL`=c())
tibble("NULL"=c())
backend@variables$PKANNOT %>% map(~.x[-1])
res <- backend@variables$PKANNOT %>% map(~.x[-1])
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
?map
list(c(1,2,3), c(2), NULL, c())
list(c(1,2,3), c(2), NULL, character(0))
list(c(1,2,3), c(2), NULL, character(0)) %>% modify_if(is.null, ~ character(0))
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
bw@variables$PKANNOT
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
bw@variables$PKANNOT
fw <- action$execute_read(backend)
fw@variables
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
Table reading with colnames
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
bw@variables
bw@variables@PK
bw@variables$PKANNOT
backend@variables$PKANNOT
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
c(NULL)
NULL
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
load_all()
backend <- get_proto_backend(
PKANNOT = list(
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9189 Br- 1 78.9189 -0.33",
"2 193.9252 C7HBrNO- 1 193.9247 2.32",
"3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
c("index m/z tentative_formula formula_count mass error(ppm)",
"1 78.9188 Br- 1 78.9189 -0.71",
"2 193.9246 C7HBrNO- 1 193.9247 -0.56",
"3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
c(),
c("index m/z tentative_formula formula_count mass error(ppm)")
))
action <- get_proto_action(
"tabular",
source = "PKANNOT",
target = "annotation",
sep= " ",
header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-PKANNOT)
bw <- action$execute_write(fw)
bw@variables$PKANNOT
#' Metadata action: mutate
#'
#' Generate a new field from an old field and optional helper fields.
#'
#' @examples
backend <- get_proto_backend(temp_rt = c(4,5,6,40,50,60),
temp_rt_factor = c(1,1,1,60,60,60))
action <- get_proto_action(
"mutate",
source = "temp_rt",
target = "*rtime",
read = "{temp_rt / temp_rt_factor}",
write = "{temp_rt * temp_rt_factor}"
)
fw <- action$execute_read(backend)
fw@variables
fw@variables <- fw@variables %>% select(-temp_rt, temp_rt_factor)
bw <- action$execute_write(fw)
action <- get_proto_action(
"mutate",
source = "temp_rt",
target = "*rtime",
read = "{temp_rt / temp_rt_factor}",
write = "{rtime * temp_rt_factor}"
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-temp_rt, temp_rt_factor)
bw <- action$execute_write(fw)
action <- get_proto_action(
"mutate",
source = "temp_rt",
target = "*rtime",
read = "{temp_rt / temp_rt_factor}",
write = "{rtime * temp_rt_factor}"
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-temp_rt, temp_rt_factor)
fw@variables <- fw@variables %>% select(-temp_rt, -temp_rt_factor)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-temp_rt, -temp_rt_factor)
bw <- action$execute_write(fw)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-temp_rt)
bw <- action$execute_write(fw)
fw@variables
?glue
?type_convert
action <- get_proto_action(
"mutate",
source = "temp_rt",
target = "*rtime",
read = "{temp_rt / temp_rt_factor}",
write = "{rtime * temp_rt_factor}"
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-temp_rt)
fw@variables
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(temp_rt = c(4,5,6,40,50,60),
temp_rt_factor = c(1,1,1,60,60,60))
action <- get_proto_action(
"mutate",
source = "temp_rt",
target = "*rtime",
read = "{temp_rt / temp_rt_factor}",
write = "{rtime * temp_rt_factor}"
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-temp_rt)
bw <- action$execute_write(fw)
#' Metadata action: mutate
#'
#' Generate a new field from an old field and optional helper fields.
#'
#' @examples
backend <- get_proto_backend(temp_rt = c(4,5,6,40,50,60),
temp_rt_factor = c(1,1,1,60,60,60))
action <- get_proto_action(
"mutate",
source = "temp_rt",
target = "*rtime",
read = "{temp_rt / temp_rt_factor}",
write = "{rtime * temp_rt_factor}"
)
fw <- action$execute_read(backend)
library(devtools)
library(tidyverse)
library(Spectra)
load_all()
backend <- get_proto_backend(temp_rt = c(4,5,6,40,50,60),
temp_rt_factor = c(1,1,1,60,60,60))
action <- get_proto_action(
"mutate",
source = "temp_rt",
target = "*rtime",
read = "{temp_rt / temp_rt_factor}",
write = "{rtime * temp_rt_factor}"
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables %>% select(-temp_rt)
bw <- action$execute_write(fw)
bw@variables
glue_restricted <- function(glue_str, env) {
glue(glue_str, .envir = env)
}
glue_restricted <- function(glue_str, env) {
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/conversionunit} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue(pattern))
df
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/conversionunit} minutes" # loaded from user's config file
glue_restricted <- function(glue_str, env) {
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/conversionunit} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
df <- df %>% mutate(output = glue_restricted(pattern, .))
df
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/conversionunit} minutes" # loaded from user's config file
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern, .))
mutate
UseMethod("mutate")
?quo
glue_restricted <- function(glue_str, env = enquo(.)) {
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
glue_restricted <- function(glue_str, env = .) {
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
glue_restricted <- function(glue_str, env= .data) {
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
glue_restricted <- function(glue_str, env= expr(.data)) {
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
glue_restricted <- function(glue_str, env= .data) {
.data <- enquo(.data)
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
df <- df %>% mutate(output = glue_restricted(pattern, env = .))
glue_restricted <- function(glue_str, env= .data) {
env <- enquo(env)
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
df <- df %>% mutate(output = glue_restricted(pattern, env = .))
glue_restricted <- function(glue_str, env= .data) {
#env <- enquo(env)
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/sqrt(conversionunit)} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
df <- df %>% mutate(output = glue_restricted(pattern, env = .))
pattern <- "{a/conversionunit} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
df <- df %>% mutate(output = glue_restricted(pattern, env = .))
df
glue_restricted <- function(glue_str, env= .data) {
env <- enquo(env)
safe_fun <- lst(`*`, `/`, round)
safe_env <- list2env(c(env, safe_fun), parent = emptyenv())
glue(glue_str, .envir = safe_env)
}
df <- tibble(a = c(70,80,90,4,5), conversionunit = c(60,60,60,1,1))
pattern <- "{a/conversionunit} minutes" # loaded from user's config file
df <- df %>% mutate(output = glue_restricted(pattern))
df <- df %>% mutate(output = glue_restricted(pattern, env = .))
