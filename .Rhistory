?extract
massbankdata$`AC$MASS_SPECTROMETRY` %>% map( ~ tibble(value = .x)) %>% map(separate, "value")
massbankdata$`AC$MASS_SPECTROMETRY` %>% map( ~ tibble(value = .x)) %>% map(separate, "value", into = c("key", "value"))
massbankdata$`AC$MASS_SPECTROMETRY` %>% map( ~ tibble(value = .x)) %>% map(separate, "value", into = c("key", "value"), sep = " ")
massbankdata$`AC$MASS_SPECTROMETRY` %>% map( ~ pivot_wider())
massbankdata$`AC$MASS_SPECTROMETRY` %>% map( ~ pivot_wider(.x))
massbankdata$`AC$MASS_SPECTROMETRY`
massbankdata$`AC$MASS_SPECTROMETRY` %>% map( ~ tibble(value = .x)) %>% map(pivot_wider)
massbankdata$`AC$MASS_SPECTROMETRY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, "(.*?) (.*)"))
massbankdata$`AC$MASS_SPECTROMETRY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, "(.*?) (.*)"))
massbankdata$`AC$MASS_SPECTROMETRY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)"))
massbankdata$`AC$MASS_SPECTROMETRY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value")))
massbankdata$`AC$MASS_SPECTROMETRY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider, names_from = "key", values_from = "value", values_fn = list)
massbankdata$`AC$MASS_SPECTROMETRY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
massbankdata$`AC$MASS_SPECTROMETRY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value")
massbankdata$`AC$CHROMATOGRAPHY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value")
massbankdata$`AC$CHROMATOGRAPHY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value")))
massbankdata$`AC$CHROMATOGRAPHY` %>%
map( ~ tibble(value = .x)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value")
?values_fn
?pivot_wider
massbankdata$`AC$CHROMATOGRAPHY` %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value")
massbankdata$`AC$CHROMATOGRAPHY` %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
arusdata
View(arusdata)
massbankdata$`AC$CHROMATOGRAPHY` %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
massbankdata3 <-
massbankdata %>% mutate(
$`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list))
massbankdata3 <-
massbankdata %>% mutate(
$`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
massbankdata3 <-
massbankdata %>% mutate(
`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
)
massbankdata4 <- massbankdata3[c(1,1),]
massbankdata4[2, "AC$CHROMATOGRAPHY"]
massbankdata4["AC$CHROMATOGRAPHY"][[2]]
massbankdata4$`AC$CHROMATOGRAPHY`[[2]]
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] <-
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] %>% mutate(gugus2 = c("b", "b")) %>% select(-`MS@COLUMN_NAME`)
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] <-
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] %>% mutate(gugus2 = list("b", "b")) %>% select(-`MS@COLUMN_NAME`)
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] <-
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] %>% mutate(gugus2 = list(c("b", "b"))) %>% select(-`MS@COLUMN_NAME`)
massbankdata4$`AC$CHROMATOGRAPHY` %>% rbind()
massbankdata4$`AC$CHROMATOGRAPHY`
massbankdata4$`AC$CHROMATOGRAPHY` %>% bind_rows()
massbankdata4 %>% unnest(`AC$`AC$CHROMATOGRAPHY``)
massbankdata4 %>% unnest(`AC$CHROMATOGRAPHY`)
res <- massbankdata4 %>% unnest(`AC$CHROMATOGRAPHY`)
View(res)
arrange(c(NA, 1, NA, 2,3,4 99))
arrange(c(NA, 1, NA, 2,3,4, 99))
tibble(a=c(NA, 1, NA, 2,3,4, 99)) %>% arrange(a)
tibble(a=c(NA, 1, NA, 2,3,4, 99, Inf)) %>% arrange(a)
?replace_na
tibble(order=c(NA, 1, NA, 2,3,4, -2, -1)) %>% mutate(order = replace_na(order, max(order) + 1)) %>%
mutate(order = if_else(order > 0, order, max(order) - min(order) + order))
tibble(order=c(NA, 1, NA, 2,3,4, -2, -1)) %>%     mutate(order = replace_na(order, max(order, na.rm = TRUE) + 1)) %>%
mutate(order = if_else(order > 0, order, max(order) - min(order) + order))
tibble(order=c(NA, 1, NA, 2,3,4, -2, -1)) %>%     mutate(order = replace_na(order, max(order, na.rm = TRUE) + 1)) %>%
mutate(order = if_else(order > 0, order, max(order) - min(order) + order + 1))
sp4@backend@format$mapping
sp4@backend@variables
sp4@backend@format$mapping
load_all()
system.time(
spMsp <- Spectra(
system.file("test_spectra/sample.msp", package="SpectraMapping"),
source = MsBackendMapping(format = MsFormatMsp(parallel=FALSE)))
)
spectraData(spMspTarget@backend) <- spectraData(spMsp@backend)
plain <- spMspTarget@backend@format$writer(spMspTarget@backend)
spMspTarget <- spMsp
spectraData(spMspTarget@backend) <- spectraData(spMsp@backend)
plain <- spMspTarget@backend@format$writer(spMspTarget@backend)
write_lines(plain, "msp_to_msp.msp")
load_all()
system.time(
spMsp <- Spectra(
system.file("test_spectra/sample.msp", package="SpectraMapping"),
source = MsBackendMapping(format = MsFormatMsp(parallel=FALSE)))
)
system.time(
spMsp <- Spectra(
system.file("test_spectra/sample.msp", package="SpectraMapping"),
source = MsBackendMapping(format = MsFormatMsp(parallel=FALSE)))
)
spMspTarget <- spMsp
spectraData(spMspTarget@backend) <- spectraData(spMsp@backend)
plain <- spMspTarget@backend@format$writer(spMspTarget@backend)
write_lines(plain, "msp_to_msp.msp")
spMsp@backend@variables
spMsp@backend@variables %>% filter(formatKey == "Num Peaks")
spMsp@backend@format$mapping
spMsp@backend@format$mapping %>% filter(type == "write")
load_all()
system.time(
spMsp <- Spectra(
system.file("test_spectra/sample.msp", package="SpectraMapping"),
source = MsBackendMapping(format = MsFormatMsp(parallel=FALSE)))
)
load_all()
system.time(
spMsp <- Spectra(
system.file("test_spectra/sample.msp", package="SpectraMapping"),
source = MsBackendMapping(format = MsFormatMsp(parallel=FALSE)))
)
spMspTarget <- spMsp
spectraData(spMspTarget@backend) <- spectraData(spMsp@backend)
plain <- spMspTarget@backend@format$writer(spMspTarget@backend)
write_lines(plain, "msp_to_msp.msp")
ds <- .msp_reader("inst/test_spectra/sample.msp" %>% read_file() %>% str_remove_all("\r"))
ds
ds <- .msp_reader()("inst/test_spectra/sample.msp" %>% read_file() %>% str_remove_all("\r"))
ds
sp4@backend
?glue_data
massbankdata <- sp4@backend@variables %>% pivot_wider(names_from = "formatKey", values_from = "value", values_fn = list)
massbankdata
massbankdata3 <-
massbankdata %>% mutate(
`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
)
View(massbankdata3)
View(massbankdata3[[19]][[1]])
massbankdata4 <- massbankdata3[c(1,1),]
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] <-
massbankdata4$`AC$CHROMATOGRAPHY`[[2]] %>% mutate(gugus2 = list(c("b", "b"))) %>% select(-`MS@COLUMN_NAME`)
massbankdata4$`AC$CHROMATOGRAPHY` %>% bind_rows()
massbankdata2 <- massbankdata[c(1,1,1),]
massbankdata3 <-
massbankdata %>% mutate(
`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list) %>%
bind_rows()
)
massbankdata3 <-
massbankdata2 %>% mutate(
`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list) %>%
bind_rows()
)
View(massbankdata3)
massbankdata3 <-
massbankdata2 %>% mutate(
`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
)
View(massbankdata3)
View(massbankdata3$`AC$CHROMATOGRAPHY`
)
massbankdata3 <-
massbankdata2 %>% mutate(
`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
) %>%
unnest(`AC$CHROMATOGRAPHY`)
massbankdata3$`MS@SOLVENT`
massbankdata3$`MS@FLOW_RATE`
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
var = "a"
tibble(b=c(1,2,3)) %>% mutate(!!var = b)
tibble(b=c(1,2,3)) %>% mutate(!var = b)
tibble(b=c(1,2,3)) %>% mutate(!!!var = b)
tibble(b=c(1,2,3)) %>% mutate(var = b)
tibble(b=c(1,2,3)) %>% mutate(vars(var) = b)
tibble(b=c(1,2,3)) %>% dplyr::mutate(!!var = b)
`!!`
?`!!`
var = sym("a")
tibble(b=c(1,2,3)) %>% dplyr::mutate(!!var = b)
var
tibble(b=c(1,2,3)) %>% dplyr::mutate({{var}} = b)
tibble(b=c(1,2,3)) %>% dplyr::mutate(!!var := b)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
MetadataActionMapping <- R6::R6Class(
"MetadataActionMapping",
inherit = MetadataActionBase,
base_settings = list(
source = '',
target = ''
),
process_read = function(data, params) {
if(params$source %in% colnames(data@variables)) {
data@variables <- data@variables %>% mutate(!!params$target := !!params$source)
data@spectraVariables <- c(data@spectraVariables, params$target)
}
return(data)
},
process_write = function(data, params) {
if(params$target %in% colnames(data@variables)) {
data@variables <- data@variables %>% mutate(!!params$source := !!params$target)
data@sourceVariables <- c(data@sourceVariables, params$source)
}
}
)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
wf
a <- map(wf, get_actions)
wf
.actions_registry <- list(
mapping = MetadataActionMapping,
nesting = MetadataActionNest
)
a <- map(wf, get_actions)
.actions_registry
get_actions <- function(workflow) {
map(workflow, function(settings) {
message("Action: ", settings$action)
action_module <- settings[["action"]]
action <- .actions_registry[[action_module]]$new(
#name = name,
settings = settings
)
action
})
}
a <- map(wf, get_actions)
workflow[[1]]
wf[[1]]
wf[[1]]$action
a <- get_actions(wf)
a <- get_actions(wf)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
a <- get_actions(wf)
massbankdata2 <- massbankdata[c(1,1,1),]
massbankdata3 <-
massbankdata2 %>% mutate(
`AC$CHROMATOGRAPHY` = `AC$CHROMATOGRAPHY`  %>%
map( ~ tibble(value = .x) %>% mutate(id_dummy = 1)) %>%
map( ~ extract(.x, value, regex = "(.*?) (.*)", into = c("key", "value"))) %>%
map(pivot_wider,
names_from = "key",
names_prefix = "MS@",
values_from = "value",
values_fn = list)
) %>%
unnest(`AC$CHROMATOGRAPHY`)
massbankdata <- sp4@backend@variables %>% pivot_wider(names_from = "formatKey", values_from = "value", values_fn = list)
massbankdata2 <- massbankdata[c(1,1,1),]
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute(.x), init = massbankdata2)
actions
actions[[1]]
mbd3 <- reduce(actions, ~ .y$execute_read(.x), init = massbankdata2)
actions[[1]]$settings
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), init = massbankdata2)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), init = massbankdata2)
sp5 <- sp4
sp5@backend@variables <- massbankdata2
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), init = massbankdata2)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), init = sp5@backend)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), init = sp5@backend)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
6
?reduce
mbd3 <- reduce(actions, function(data, action) action$execute_read(data), .init = sp5@backend)
sp5@backend
sp5@backend@variables
r <- actions[[1]]$execute_read(sp5@backend)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
params_
data
data
rm(data)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
.init
.initr
.init
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
source("R/metadata-actions.R")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
.actions_registry <- list(
mapping = MetadataActionMapping,
nesting = MetadataActionNest
)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
list(...)
.
params
params$target
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables
mbd3@variables -> v
View(v)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables -> v
View(v)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables -> v
View(v)
?`!!`
source('C:/Daten/git/SpectraMapping/R/metadata-actions.R', echo=TRUE)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables -> v
View(v)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables -> v
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables -> v
View(v)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
View(v)
?`:=`
sp5 <- sp4
sp5@backend@variables <- massbankdata2
source("R/metadata-actions.R")
source("R/metadata-actions.R")
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables -> v
View(v)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
mbd3@variables -> v
View(v)
source("R/metadata-actions.R")
wf <- yaml.load_file("inst/mapping/massbank-test-new.yaml")
actions <- get_actions(wf)
mbd3 <- reduce(actions, ~ .y$execute_read(.x), .init = sp5@backend)
