% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata-actions-tabular.R
\name{MetadataActionTabular}
\alias{MetadataActionTabular}
\title{Metadata action: tabular}
\description{
Metadata action: tabular

Metadata action: tabular
}
\details{
Converts a metadata column into a column of data frames. This can be used
either to get a "subtag-style" column into a key-value store, or to actually
read a table like the MassBank peak annotations.
Note: in some cases, this is probably best prepended with \code{split}, e.g. for NIST comments.
}
\examples{
 
# Key-value store reading
backend <- get_proto_backend(COMMENT = list(c("INTERNAL_ID 1234", "MYNAME Michele", "formless_nosplit"),
                                            c("formless nosplit"),
                                            c(),
                                            c("INTERNAL_ID 1232", "MYNAME something")))
action <- get_proto_action(
   "tabular",
   source = "COMMENT",
   target = "commentData",
   regex = "([A-Z_-]*)\\\\s?(.*)",
   write = "{key} {value}"
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables \%>\% select(-COMMENT)
bw <- action$execute_write(fw)

Table reading with colnames
backend <- get_proto_backend(
   PKANNOT = list(
      c("index m/z tentative_formula formula_count mass error(ppm)",
        "1 78.9189 Br- 1 78.9189 -0.33",
        "2 193.9252 C7HBrNO- 1 193.9247 2.32",
        "3 273.8506 C7H2Br2NO- 1 273.8509 -1.06"),
      c("index m/z tentative_formula formula_count mass error(ppm)",
        "1 78.9188 Br- 1 78.9189 -0.71",
        "2 193.9246 C7HBrNO- 1 193.9247 -0.56",
        "3 273.8512 C7H2Br2NO- 1 273.8509 1.16"),
      c(),
      c("index m/z tentative_formula formula_count mass error(ppm)")
   ))
action <- get_proto_action(
   "tabular",
   source = "PKANNOT",
   target = "annotation",
   sep= " ",
   header= 1
)
fw <- action$execute_read(backend)
fw@variables <- fw@variables \%>\% select(-PKANNOT)
bw <- action$execute_write(fw)

}
\section{Super class}{
\code{\link[SpectraMapping:MetadataActionBase]{SpectraMapping::MetadataActionBase}} -> \code{MetadataActionTabular}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MetadataActionTabular-process_read}{\code{MetadataActionTabular$process_read()}}
\item \href{#method-MetadataActionTabular-process_write}{\code{MetadataActionTabular$process_write()}}
\item \href{#method-MetadataActionTabular-clone}{\code{MetadataActionTabular$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="SpectraMapping" data-topic="MetadataActionBase" data-id="execute_read"><a href='../../SpectraMapping/html/MetadataActionBase.html#method-MetadataActionBase-execute_read'><code>SpectraMapping::MetadataActionBase$execute_read()</code></a></span></li>
<li><span class="pkg-link" data-pkg="SpectraMapping" data-topic="MetadataActionBase" data-id="execute_write"><a href='../../SpectraMapping/html/MetadataActionBase.html#method-MetadataActionBase-execute_write'><code>SpectraMapping::MetadataActionBase$execute_write()</code></a></span></li>
<li><span class="pkg-link" data-pkg="SpectraMapping" data-topic="MetadataActionBase" data-id="initialize"><a href='../../SpectraMapping/html/MetadataActionBase.html#method-MetadataActionBase-initialize'><code>SpectraMapping::MetadataActionBase$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="SpectraMapping" data-topic="MetadataActionBase" data-id="log_level"><a href='../../SpectraMapping/html/MetadataActionBase.html#method-MetadataActionBase-log_level'><code>SpectraMapping::MetadataActionBase$log_level()</code></a></span></li>
<li><span class="pkg-link" data-pkg="SpectraMapping" data-topic="MetadataActionBase" data-id="merge_settings"><a href='../../SpectraMapping/html/MetadataActionBase.html#method-MetadataActionBase-merge_settings'><code>SpectraMapping::MetadataActionBase$merge_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="SpectraMapping" data-topic="MetadataActionBase" data-id="set_settings"><a href='../../SpectraMapping/html/MetadataActionBase.html#method-MetadataActionBase-set_settings'><code>SpectraMapping::MetadataActionBase$set_settings()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MetadataActionTabular-process_read"></a>}}
\if{latex}{\out{\hypertarget{method-MetadataActionTabular-process_read}{}}}
\subsection{Method \code{process_read()}}{
read implementation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MetadataActionTabular$process_read(data, params)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{\code{MsBackendMapping} to execute the metadata mapping step on}

\item{\code{params}}{List of parameters for a single action (one \code{params} entry fully merged.)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MetadataActionTabular-process_write"></a>}}
\if{latex}{\out{\hypertarget{method-MetadataActionTabular-process_write}{}}}
\subsection{Method \code{process_write()}}{
write implementation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MetadataActionTabular$process_write(data, params)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{\code{MsBackendMapping} to execute the metadata mapping step on}

\item{\code{params}}{List of parameters for a single action (one \code{params} entry fully merged.)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MetadataActionTabular-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MetadataActionTabular-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MetadataActionTabular$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
